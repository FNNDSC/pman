# Build container images.
# Latest images are always tagged "next." If the build was triggered
# by a git tag, that git tag will also be used to tag the image,
# images will be pushed to ghcr.io, and built cross-platform.
# (To save time, cross-platform is disabled for untagged commits.)

name: next

on:
  push:
    branches: [ next ]
    tags: [ 'next/**' ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Get info
      id: determine
      shell: python
      run: |
        import os
        import datetime
        import itertools
        import subprocess as sp

        short_sha = os.getenv('GITHUB_SHA', 'unknown')[:7]
        build_version = f'unknown.{short_sha}'
        git_refs = []
        if os.getenv('GITHUB_REF', '').startswith('refs/tags/next/v'):
            version_from_tag = os.getenv('GITHUB_REF')[16:]
            git_refs.append('next-' + version_from_tag.replace('+', '.'))
            build_version = version_from_tag
        registries = ['docker.io']
        arch = 'linux/amd64'
        if git_refs:
            registries.append('ghcr.io')
            arch = 'linux/amd64,linux/arm64,linux/ppc64le'
        repo = os.environ['GITHUB_REPOSITORY'].lower()
        tags = ['next', short_sha] + git_refs
        names = ','.join(''.join(c) for c in itertools.product(
            (r + '/' for r in registries),
            [repo],
            (':' + t for t in tags)
        ))
        print(f'::set-output name=tags::{names}')
        print(f'::set-output name=build_version::{build_version}')
        print(f'::set-output name=arch::{arch}')
    - uses: docker/setup-qemu-action@v1
      if: contains(steps.determine.outputs.arch, ',')
    - uses: docker/setup-buildx-action@v1
      id: buildx
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Login to GitHub Container Registry
      if: contains(steps.determine.outputs.tags, 'ghcr.io')
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        build-args: |
          ENVIRONMENT=production
          BUILD_VERSION=${{ steps.determine.outputs.build_version }}
        platforms: ${{ steps.determine.outputs.arch }}
        push: true
        tags: "${{ steps.determine.outputs.tags }}"
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
